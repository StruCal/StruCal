@model StruCal.ViewModels.ConcreteCoverViewModel
@{
    ViewBag.Title = "ConcreteCover";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Concrete cover calculator</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="well">
        @Html.ValidationSummary(true)

        <div class="well">
            <h3>Rebars properties:</h3>
            <form>
                <div class="form-group">
                    @Html.LabelFor(model => model.RebarDiameterSelectList, new { @class = "control-label" })
                    <select class="form-control" id="RebarDiameterSelectList">
                        @foreach (SelectListItem item in Model.RebarDiameterSelectList)
                        {
                            <option>@item.Text</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ArrangementOfBarsSelectList, new { @class = "control-label" })
                    <select class="form-control" id="ArrangementOfBarsSelectList">
                        @foreach (SelectListItem item in Model.ArrangementOfBarsSelectList)
                        {
                            <option>@item.Text</option>
                        }
                    </select>
                </div>
            </form>
        </div>

        <div class="well">
            <h3>Concrete properties:</h3>
            <form>
                <div class="form-group">
                    @Html.LabelFor(model => model.ConcreteClassSelectList, new { @class = "control-label" })
                    <select class="form-control" id="ConcreteClassSelectList">
                        @foreach (SelectListItem item in Model.ConcreteClassSelectList)
                        {
                            <option>@item.Text</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ExposureClassSelectList, new { @class = "control-label" })
                    <select class="form-control" id="ExposureClassSelectList">
                        @foreach (SelectListItem item in Model.ExposureClassSelectList)
                        {
                            <option>@item.Text</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.BaseStructuralClassSelectList, new { @class = "control-label" })
                    <select class="form-control" id="BaseStructuralClassSelectList">
                        @foreach (SelectListItem item in Model.BaseStructuralClassSelectList)
                        {
                            <option>@item.Text</option>
                        }
                    </select>
                </div>
                <div class="checkbox">
                    <label><input type="checkbox" value="" id="NominalMaximumAggregateSizeIsGreaterThan32mmCheckbox">Is nominal maximum aggregate size is greater than 32mm?</label>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.MinimumCoverDueToBondRequirement, new { @class = "control-label" })
                    
                </div>
            </form>
        </div>
        <div class="well">
            <h3>Structure properties:</h3>
            <form>
                <div class="checkbox">
                    <label><input type="checkbox" value="" id="DesignWorkingLifeOf100YearsCheckbox">Is design working life of 100 years?</label>
                </div>
                <div class="checkbox">
                    <label><input type="checkbox" value="" id="MemberWithSlabGeometryCheckbox">Is member with slab geometry?</label>
                </div>
                <div class="checkbox">
                    <label><input type="checkbox" value="" id="SpecialQualityControlOfTheConcreteProductionEnsuredCheckbox">Is special quality control of the concrete production ensured?</label>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.StructuralClass, new { @class = "control-label" })

                    @Html.LabelFor(model => model.MinimumCoverDueToEnvironmentalConditions, new { @class = "control-label" })
                </div>
            </form>
        </div>
        <div class="well">
            <form>
                <button type="button" class="btn btn-info" data-toggle="collapse" data-target="#CollapseAdditionalProperties">Additional properties</button>
                <div id="CollapseAdditionalProperties" class="collapse">
                    <br/>
                    <div class="form-group">
                        @Html.LabelFor(model => model.AdditiveSafetyElement, new { @class = "control-label" })
                        @Html.EditorFor(model => model.AdditiveSafetyElement, new { htmlAttributes = new { @class = "form-control", @placeholder = "10;20;30" } })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ReductionOfMinimumCoverForUseOfAdditionalProtection, new { @class = "control-label" })
                        @Html.EditorFor(model => model.ReductionOfMinimumCoverForUseOfAdditionalProtection, new { htmlAttributes = new { @class = "form-control", @placeholder = "10;20;30" } })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ReductionOfMinimumCoverForUseOfStainlessSteel, new { @class = "control-label" })
                        @Html.EditorFor(model => model.ReductionOfMinimumCoverForUseOfStainlessSteel, new { htmlAttributes = new { @class = "form-control", @placeholder = "10;20;30" } })
                    </div>
                </div>
            </form>
        </div>

        <div class="well">
            <form>
                <div class="form-group">
                    @Html.LabelFor(model => model.AllowanceInDesignForDeviation, new { @class = "control-label" })
                    @Html.EditorFor(model => model.AllowanceInDesignForDeviation, new { htmlAttributes = new { @class = "form-control", @placeholder = "10;20;30" } })
                </div>
            </form>
        </div>
        <div class="submit"><input type="submit" value="Calculate!" /></div>
        <h3>
            @Html.LabelFor(model => model.NominalCover, new { @class = "control-label" })
            <span class="label label-success">@Model.NominalCover</span>
        </h3>
    </div>
}

<div>
    @Html.ActionLink("Back to Home", "Index")
</div>

