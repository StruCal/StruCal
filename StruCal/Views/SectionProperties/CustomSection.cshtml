@using StruCal.Views.Shared
@model StruCal.ViewModels.CustomSectionViewModel
@{
    ViewBag.Title = "Index";
    Layout = "_SectionPropertiesLayout.cshtml";
}


<p class="text-justify">
    Please provide the cordinates of the section. The coordinates should be provided as pairs of X and Y numbers separated by semicolons as shown in the following example: <strong><em>5.5;10 20.4;18.8 30;-80</em></strong>.
</p>
<br />
<div class="row">
    <div class="col-md-4">
        @using (Html.BeginForm())
            {
            @Html.AntiForgeryToken()

            <div id="inputForms">
                @Html.Partial("_ValidationPartial")
                <div class="form-group">
                    @Html.LabelFor(model => model.Coordinates, new { @class = "control-label" })
                    @Html.EditorFor(model => model.Coordinates, new { htmlAttributes = new { @class = "form-control", @placeholder = "0;0 10;0 10;10 0;10" } })
                </div>
                @*<div class="form-group">
                        @Html.LabelFor(model => model.YCoordinates, new { @class = "control-label" })
                        @Html.EditorFor(model => model.YCoordinates, new { htmlAttributes = new { @class = "form-control", @placeholder = "10;20;20;10;" } })
                    </div>*@

                <div class="form-group">
                    <input id="runButton" type="submit" value="Run" class="btn btn-primary" />
                </div>
            </div>
        }
    </div>
    <div class="col-md-8">
        <div id="canvas">

        </div>
    </div>
</div>

@Html.Partial("_ResultsPartial", Model)

<script>
    /*(Dawid: scroll down after clicking Run button to show the table, simple example, maybe add if/else whether button run was clicked or not?)
    PROPOSALS:
    - round values,
    - show units,
    - show symbols with sub/superscripts, greek symbols
    */
    //$(window).load(function () {
    //    //$("html,body").scrollTop(10000);
    //    location.href = "#results"
    //});

    $(document).ready(function () {

        createCustomDrawing();
        $("#inputForms input").change(createCustomDrawing);
        $("#inputForms input").keyup(createCustomDrawing);
        $(window).resize(createCustomDrawing);
    });
</script>
