
@{ 
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h2>Welcome to the Section Properties Calculator</h2>
    <br />
    <h5>
        The calculator provides section properties such as
        area, centre of gravity, moments of inertia of the sections with any custom sections.
        It is reliable, fast and avilable anytime and anywhere.
    </h5>
    <br />
    <div class="pill-content">
        <ul class="nav nav-pills">
            <li role="presentation" class="active"><a data-toggle="tab" href="#results">Custom</a></li>
            <li role="presentation"><a data-toggle="tab" href="#results">Rectangular</a></li>
            <li role="presentation"><a data-toggle="tab" href="#results">Circular</a></li>
            <li role="presentation"><a data-toggle="tab" href="#results">T-Section</a></li>
            <li role="presentation"><a data-toggle="tab" href="#results">I-Section</a></li>
        </ul>
    </div>
    <br />
    @RenderBody()
    
</div>

@Scripts.Render("~/bundles/svg")
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/drawing")
<script>
    /*(Dawid: scroll down after clicking Run button to show the table, simple example, maybe add if/else whether button run was clicked or not?)
    PROPOSALS:
    - round values,
    - show units,
    - show symbols with sub/superscripts, greek symbols
    */
    $(window).load(function () {
        $("html,body").scrollTop(10000);
    });

    $(document).ready(function () {

        createCustomDrawing();
        $("#inputForms input").change(createCustomDrawing);
        $("#inputForms input").keyup(createCustomDrawing);
        $(window).resize(createCustomDrawing);
    });


    //---SHOULD BE PUT TO SEPARATE FILE--//

    //main function for filling canvas with objects: section, vertical and horizontal lines,
    //axes of coordinate system
    function createCustomDrawing() {
        var canvasObject = $('#canvas');
        var xString = $("#XCoordinates").val();
        var yString = $("#YCoordinates").val();

        var x = splitCoordinates(xString);
        var y = splitCoordinates(yString);

        if (x.length != y.length) {
            return;
        }

        fillCanvas(x, y, canvasObject);
    }
</script>
